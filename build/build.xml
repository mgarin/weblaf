<?xml version="1.0"?>
<project name="Web Look and Feel" basedir="../" default="build.basic.artifacts">

    <!-- Property files -->
    <property file="build/version.properties" />
    <property file="build/build.properties" />

    <!-- =========================== Base settings ============================ -->

    <!-- Base classpaths -->
    <property name="core.classpath" value="${slf4j.api.jar} ${slf4j.binding.jar} ${imagescaling.jar} ${jericho.jar} ${xstream.jar}" />
    <property name="ui.classpath" value="${core.classpath} ${rsyntaxtextarea.jar}" />
    <property name="demo.classpath" value="${ui.classpath}" />
    <!-- Separate JAR classpaths -->
    <property name="core.jar.classpath" value="${core.classpath}" />
    <property name="ui.jar.classpath" value="${ui.classpath} ${library.core.jar.name}" />
    <property name="demo.jar.classpath" value="${demo.classpath} ${library.core.jar.name} ${library.ui.jar.name}" />
    <!-- Complete JAR classpaths -->
    <property name="weblaf.jar.classpath" value="${ui.classpath}" />

    <!-- Classpath -->
    <path id="core.classpath">
        <fileset dir="${lib.dir}" includes="*.jar" />
    </path>
    <path id="ui.classpath">
        <fileset dir="${lib.dir}" includes="*.jar" />
        <pathelement path="${library.core.dist.dir}" />
    </path>
    <path id="demo.classpath">
        <fileset dir="${lib.dir}" includes="*.jar" />
        <pathelement path="${library.core.dist.dir}" />
        <pathelement path="${library.ui.dist.dir}" />
    </path>

    <!-- =========================== Base targets ============================ -->

    <!-- Dist directory -->
    <target name="clean.dist.dir">
        <delete dir="${dist.dir}" />
    </target>
    <target name="create.dist.dir">
        <mkdir dir="${dist.dir}" />
    </target>

    <!-- Artifacts directory -->
    <target name="clean.artifacts.dir">
        <delete dir="${artifacts.dir}" />
    </target>
    <target name="create.artifacts.dir">
        <mkdir dir="${artifacts.dir}" />
    </target>

    <!-- Compile classes -->
    <target name="compile.core" depends="create.dist.dir">
        <mkdir dir="${library.core.dist.dir}" />
        <javac debug="true" includeantruntime="false" destdir="${library.core.dist.dir}" encoding="utf-8" source="1.6" target="1.6">
            <src path="${library.core.src.dir}" />
            <classpath refid="core.classpath" />
        </javac>
    </target>
    <target name="compile.ui" depends="compile.core">
        <mkdir dir="${library.ui.dist.dir}" />
        <javac debug="true" includeantruntime="false" destdir="${library.ui.dist.dir}" encoding="utf-8" source="1.6" target="1.6">
            <src path="${library.ui.src.dir}" />
            <classpath refid="ui.classpath" />
        </javac>
    </target>
    <target name="compile.demo" depends="compile.ui">
        <mkdir dir="${library.demo.dist.dir}" />
        <javac debug="true" includeantruntime="false" destdir="${library.demo.dist.dir}" encoding="utf-8" source="1.6" target="1.6">
            <src path="${library.demo.src.dir}" />
            <classpath refid="demo.classpath" />
        </javac>
    </target>

    <!-- Resources copy -->
    <target name="copy.core.res">
        <copy todir="${library.core.dist.dir}">
            <fileset dir="${library.core.src.dir}" excludes="**/*.java" />
        </copy>
    </target>
    <target name="copy.ui.res" depends="copy.core.res">
        <copy todir="${library.ui.dist.dir}">
            <fileset dir="${library.ui.src.dir}" excludes="**/*.java" />
        </copy>
    </target>
    <target name="copy.demo.res" depends="copy.ui.res">
        <copy todir="${library.demo.dist.dir}">
            <fileset dir="${library.demo.src.dir}" excludes="**/*.java" />
        </copy>
    </target>
    <target name="copy.core.src">
        <copy todir="${library.core.dist.dir}">
            <fileset dir="${library.core.src.dir}" />
        </copy>
    </target>
    <target name="copy.ui.src">
        <copy todir="${library.ui.dist.dir}">
            <fileset dir="${library.ui.src.dir}" />
        </copy>
    </target>
    <target name="copy.demo.src">
        <copy todir="${library.demo.dist.dir}">
            <fileset dir="${library.demo.src.dir}" />
        </copy>
    </target>
    <target name="copy.lic">
        <copy todir="${dist.dir}/licenses">
            <fileset dir="${lic.dir}" />
        </copy>
    </target>
    <target name="copy.lib">
        <copy todir="${artifacts.dir}">
            <fileset dir="${lib.dir}" />
        </copy>
    </target>
    <target name="copy.demo.jnlp">
        <copy todir="${artifacts.dir}">
            <fileset file="${demo.jnlp}" />
        </copy>
    </target>

    <!-- =========================== Separate binaries ============================ -->

    <!-- Assemble library core jar -->
    <target name="build.core.jar" description="Build ${library.core.jar}" depends="clean.dist.dir,compile.core,copy.core.res,copy.lic,create.artifacts.dir">
        <jar destfile="${library.core.jar}">
            <fileset dir="${dist.dir}" includes="licenses/**" />
            <fileset dir="${library.core.dist.dir}" />
            <manifest>
                <attribute name="Package-Title" value="${package}" />
                <attribute name="Package-Vendor" value="${dev}" />
                <attribute name="Package-Version" value="${version.info}" />
                <attribute name="Product-Name" value="${library.core.title}" />
                <attribute name="Class-Path" value="${core.jar.classpath}" />
            </manifest>
        </jar>
    </target>

    <!-- Assemble library ui jar -->
    <target name="build.ui.jar" description="Build ${library.ui.jar}" depends="clean.dist.dir,compile.ui,copy.ui.res,copy.lic,create.artifacts.dir">
        <jar destfile="${library.ui.jar}">
            <fileset dir="${dist.dir}" includes="licenses/**" />
            <fileset dir="${library.ui.dist.dir}" />
            <manifest>
                <attribute name="Package-Title" value="${package}" />
                <attribute name="Package-Vendor" value="${dev}" />
                <attribute name="Package-Version" value="${version.info}" />
                <attribute name="Product-Name" value="${library.ui.title}" />
                <attribute name="Main-Class" value="${library.ui.main}" />
                <attribute name="Class-Path" value="${ui.jar.classpath}" />
            </manifest>
        </jar>
    </target>

    <!-- Assemble library demo jar
    <target name="build.demo.jar" description="Build ${library.demo.jar}" depends="compile.demo,copy.demo.res,copy.lic,create.artifacts.dir">
        <jar destfile="${library.demo.jar}">
            <fileset dir="${dist.dir}" includes="licenses/**" />
            <fileset dir="${library.demo.dist.dir}" />
            <manifest>
                <attribute name="Package-Title" value="${package}" />
                <attribute name="Package-Vendor" value="${dev}" />
                <attribute name="Package-Version" value="${version.info}" />
                <attribute name="Product-Name" value="${library.demo.title}" />
                <attribute name="Main-Class" value="${library.demo.main}" />
                <attribute name="Class-Path" value="${demo.jar.classpath}" />
            </manifest>
        </jar>
    </target>
    -->

    <!-- =========================== Complete binaries ============================ -->

    <!-- Assemble library binary -->
    <target name="build.weblaf.jar" description="Build ${library.jar}" depends="clean.dist.dir,compile.ui,copy.ui.res,copy.lic,create.artifacts.dir">
        <jar destfile="${library.jar}">
            <fileset dir="${dist.dir}" includes="licenses/**" />
            <fileset dir="${library.core.dist.dir}" />
            <fileset dir="${library.ui.dist.dir}" />
            <manifest>
                <attribute name="Package-Title" value="${package}" />
                <attribute name="Package-Vendor" value="${dev}" />
                <attribute name="Package-Version" value="${version.info}" />
                <attribute name="Product-Name" value="${library.title}" />
                <attribute name="Main-Class" value="${library.main}" />
                <attribute name="Class-Path" value="${weblaf.jar.classpath}" />
            </manifest>
        </jar>
    </target>

    <!-- Assemble complete library binary -->
    <target name="build.weblaf.complete.jar" description="Build ${library.complete.jar}" depends="clean.dist.dir,compile.ui,copy.ui.res,copy.lic,create.artifacts.dir">
        <jar destfile="${library.complete.jar}">
            <zipfileset src="${lib.dir}/${rsyntaxtextarea.jar}" />
            <zipfileset src="${lib.dir}/${slf4j.api.jar}" />
            <zipfileset src="${lib.dir}/${slf4j.binding.jar}" />
            <zipfileset src="${lib.dir}/${imagescaling.jar}" />
            <zipfileset src="${lib.dir}/${jericho.jar}" />
            <zipfileset src="${lib.dir}/${xstream.jar}" />
            <fileset dir="${dist.dir}" includes="licenses/**" />
            <fileset dir="${library.core.dist.dir}" />
            <fileset dir="${library.ui.dist.dir}" />
            <manifest>
                <attribute name="Package-Title" value="${package}" />
                <attribute name="Package-Vendor" value="${dev}" />
                <attribute name="Package-Version" value="${version.info}" />
                <attribute name="Product-Name" value="${library.complete.title}" />
                <attribute name="Main-Class" value="${library.complete.main}" />
            </manifest>
        </jar>
    </target>

    <!-- =========================== Featured binaries ============================ -->

    <!-- Assemble library demo -->
    <target name="build.weblaf.demo.jar" description="Build ${demo.jar}" depends="clean.dist.dir,compile.demo,copy.demo.res,copy.lic,create.artifacts.dir,copy.demo.jnlp">
        <jar destfile="${demo.jar}">
            <zipfileset src="${lib.dir}/${rsyntaxtextarea.jar}" />
            <zipfileset src="${lib.dir}/${slf4j.api.jar}" />
            <zipfileset src="${lib.dir}/${slf4j.binding.jar}" />
            <zipfileset src="${lib.dir}/${imagescaling.jar}" />
            <zipfileset src="${lib.dir}/${jericho.jar}" />
            <zipfileset src="${lib.dir}/${xstream.jar}" />
            <zipfileset src="${lib.dir}/${svgsalamander.jar}" />
            <fileset dir="${dist.dir}" includes="licenses/**" />
            <fileset dir="${library.core.dist.dir}" />
            <fileset dir="${library.core.src.dir}" includes="**/*.java" />
            <fileset dir="${library.ui.dist.dir}" />
            <fileset dir="${library.ui.src.dir}" includes="**/*.java" />
            <fileset dir="${library.demo.dist.dir}" />
            <fileset dir="${library.demo.src.dir}" includes="**/*.java" />
            <manifest>
                <attribute name="Package-Title" value="${package}" />
                <attribute name="Package-Vendor" value="${dev}" />
                <attribute name="Package-Version" value="${version.info}" />
                <attribute name="Product-Name" value="${demo.title}" />
                <attribute name="Main-Class" value="${demo.main}" />
            </manifest>
        </jar>
    </target>

    <!-- Assemble nine-patch editor jar -->
    <target name="build.npe.jar" description="Build ${npe.jar}" depends="clean.dist.dir,compile.ui,copy.ui.res,copy.lic,create.artifacts.dir">
        <jar destfile="${npe.jar}">
            <zipfileset src="${lib.dir}/${rsyntaxtextarea.jar}" />
            <zipfileset src="${lib.dir}/${slf4j.api.jar}" />
            <zipfileset src="${lib.dir}/${slf4j.binding.jar}" />
            <zipfileset src="${lib.dir}/${imagescaling.jar}" />
            <zipfileset src="${lib.dir}/${jericho.jar}" />
            <zipfileset src="${lib.dir}/${xstream.jar}" />
            <fileset dir="${dist.dir}" includes="licenses/**" />
            <fileset dir="${library.core.dist.dir}" />
            <fileset dir="${library.ui.dist.dir}" />
            <manifest>
                <attribute name="Package-Title" value="${package}" />
                <attribute name="Package-Vendor" value="${dev}" />
                <attribute name="Package-Version" value="${version.info}" />
                <attribute name="Product-Name" value="${npe.title}" />
                <attribute name="Main-Class" value="${npe.main}" />
            </manifest>
        </jar>
    </target>

    <!-- =========================== Misc binaries ============================ -->

    <!-- Assemble library sources ZIP archive -->
    <target name="build.sources.zip" description="Build ${sources.zip}" depends="clean.dist.dir,create.dist.dir,create.artifacts.dir">
        <copy todir="${dist.dir}/build">
            <fileset dir="${build.dir}" />
        </copy>
        <copy todir="${dist.dir}/lib">
            <fileset dir="${lib.dir}" />
        </copy>
        <copy todir="${dist.dir}/licenses">
            <fileset dir="${lic.dir}" />
        </copy>
        <copy todir="${dist.dir}/modules">
            <fileset dir="${modules.dir}" excludes="**/*.iml">
                <exclude name="test/**" />
            </fileset>
        </copy>
        <zip destfile="${sources.zip}">
            <fileset dir="${dist.dir}" />
        </zip>
    </target>

    <!-- Assemble library sources JAR -->
    <target name="build.sources.jar" description="Build ${sources.jar}" depends="clean.dist.dir,create.dist.dir,create.artifacts.dir">
        <copy todir="${dist.dir}/licenses">
            <fileset dir="${lic.dir}" />
        </copy>
        <copy todir="${dist.dir}">
            <fileset dir="${library.core.src.dir}" />
            <fileset dir="${library.ui.src.dir}" />
            <fileset dir="${library.demo.src.dir}" />
        </copy>
        <jar destfile="${sources.jar}">
            <fileset dir="${dist.dir}" />
            <manifest>
                <attribute name="Package-Title" value="${package}" />
                <attribute name="Package-Vendor" value="${dev}" />
                <attribute name="Package-Version" value="${version.info}" />
                <attribute name="Product-Name" value="${library.title}" />
                <attribute name="Main-Class" value="${library.main}" />
                <attribute name="Class-Path" value="${weblaf.jar.classpath}" />
            </manifest>
        </jar>
    </target>

    <!-- Assemble JavaDoc JAR -->
    <target name="build.javadoc.jar" description="Build ${javadoc.jar}" depends="create.artifacts.dir">
        <javadoc destdir="${javadoc.dir}" author="true" version="true" use="true">
            <packageset dir="${library.core.src.dir}" defaultexcludes="yes" />
            <packageset dir="${library.ui.src.dir}" defaultexcludes="yes" />
            <packageset dir="${library.demo.src.dir}" defaultexcludes="yes" />
            <classpath refid="demo.classpath" />
        </javadoc>
        <zip destfile="${javadoc.jar}">
            <fileset dir="${javadoc.dir}" />
        </zip>
    </target>

    <!-- =========================== Versioning targets ============================ -->

    <!-- Assemble and run version updater jar -->
    <target name="update.library.version" depends="clean.dist.dir,compile.ui,copy.ui.res,create.artifacts.dir">
        <jar destfile="${vupdater.jar}">
            <fileset dir="${library.ui.dist.dir}" />
            <manifest>
                <attribute name="Main-Class" value="${vupdater.main}" />
                <attribute name="Class-Path" value="${ui.jar.classpath}" />
            </manifest>
        </jar>
        <java jar="${vupdater.jar}" fork="true" />
        <delete file="${vupdater.jar}" />
    </target>

    <!-- Copy XML version file into artifacts folder -->
    <target name="copy.version.file">
        <copy file="${xml.version.file}" todir="${artifacts.dir}" />
    </target>

    <!-- =========================== Complex targets ============================ -->

    <!-- Assemble all artifacts -->
    <target name="build.all.artifacts" description="Build all WebLaF binaries">
        <antcall target="clean.artifacts.dir" />
        <antcall target="build.base.impl" />
        <antcall target="build.complete.impl" />
        <antcall target="build.featured.impl" />
        <antcall target="build.src.impl" />
        <antcall target="build.javadoc.impl" />
        <antcall target="clean.dist.dir" />
    </target>

    <!-- Assemble basic artifacts -->
    <target name="build.basic.artifacts" description="Build basic WebLaF binaries">
        <antcall target="clean.artifacts.dir" />
        <antcall target="build.base.impl" />
        <antcall target="build.src.impl" />
        <antcall target="clean.dist.dir" />
    </target>

    <!-- Assemble common artifacts -->
    <target name="build.common.artifacts" description="Build common WebLaF binaries">
        <antcall target="clean.artifacts.dir" />
        <antcall target="build.base.impl" />
        <antcall target="build.complete.impl" />
        <antcall target="build.featured.impl" />
        <antcall target="build.src.impl" />
        <antcall target="clean.dist.dir" />
    </target>

    <!-- Assemble release artifacts -->
    <target name="build.release.artifacts" description="Build release WebLaF binaries">
        <antcall target="clean.artifacts.dir" />
        <antcall target="copy.lib" />
        <antcall target="build.base.impl" />
        <antcall target="build.complete.impl" />
        <antcall target="build.featured.impl" />
        <antcall target="build.src.impl" />
        <antcall target="build.javadoc.impl" />
        <antcall target="copy.version.file" />
        <antcall target="update.library.version" />
        <antcall target="clean.dist.dir" />
    </target>

    <!-- Single assembled builds -->
    <target name="build.base.artifacts" description="Build base WebLaF binaries">
        <antcall target="clean.artifacts.dir" />
        <antcall target="build.base.impl" />
        <antcall target="clean.dist.dir" />
    </target>
    <target name="build.complete.artifacts" description="Build unified WebLaF binaries">
        <antcall target="clean.artifacts.dir" />
        <antcall target="build.complete.impl" />
        <antcall target="clean.dist.dir" />
    </target>
    <target name="build.featured.artifacts" description="Build featured WebLaF binaries">
        <antcall target="clean.artifacts.dir" />
        <antcall target="build.featured.impl" />
        <antcall target="clean.dist.dir" />
    </target>
    <target name="build.misc.artifacts" description="Build miscellaneous WebLAF binaries" >
        <antcall target="clean.artifacts.dir" />
        <antcall target="build.src.impl" />
        <antcall target="clean.dist.dir" />
    </target>
    <target name="build.javadoc.artifacts" description="Build miscellaneous WebLAF binaries" >
        <antcall target="clean.artifacts.dir" />
        <antcall target="build.javadoc.impl" />
        <antcall target="clean.dist.dir" />
    </target>

    <!-- Assembled build implementations -->
    <target name="build.base.impl">
        <antcall target="build.core.jar" />
        <antcall target="build.ui.jar" />
    </target>
    <target name="build.complete.impl">
        <antcall target="build.weblaf.jar" />
        <antcall target="build.weblaf.complete.jar" />
    </target>
    <target name="build.featured.impl">
        <antcall target="build.weblaf.demo.jar" />
        <antcall target="build.npe.jar" />
    </target>
    <target name="build.src.impl">
        <antcall target="build.sources.zip" />
        <antcall target="build.sources.jar" />
    </target>
    <target name="build.javadoc.impl">
        <antcall target="build.javadoc.jar" />
    </target>

    <!-- =========================== Run targets ============================ -->

    <target name="run.weblaf" description="Display WebLaF information dialog" depends="build.weblaf.complete.jar">
        <java jar="${library.complete.jar}" fork="true" />
    </target>

    <target name="run.weblaf.demo" description="Run WebLaF demo application" depends="build.weblaf.demo.jar">
        <java jar="${demo.jar}" fork="true" />
    </target>

    <target name="run.npe" description="Run Nine-Patch Editor" depends="build.npe.jar">
        <java jar="${npe.jar}" fork="true" />
    </target>

</project>